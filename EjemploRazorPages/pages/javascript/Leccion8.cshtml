@page "/js8"
@model EjemploRazorPages.pages.javascript.Leccion8Model
@{
}
<html>
<head>
    <title>Lección 8</title>

    <style>
        table {
            width: 80%;
            margin: auto;
            border-collapse: collapse;
        }

        td, th {
            border: 1px solid black;
        }

            td:first-of-type {
                width: 20%;
            }
    </style>
</head>
<body>

    <h1 id="titulo">Lección 8.</h1>
    @*Arrow functions (LINQ) =>*@

    <form>
        <input type="search" id="txtSearch" />
        <input type="button" id="btnFiltrar" value="filtrar" />
    </form>

    <table>
        <thead>
            <tr>
                <th>Núm. Control</th>
                <th>Nombre</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    <script src="~/scripts/alumnos.js"></script>
    <script>
        var tabla;
        function mostrarDatos(datos) {

            //operador de coecencia nula, busca la tabla solo la primera vez
            tabla ??= document.querySelector("table tbody");

            //si hay no hay rows suficientes
            if (tabla.rows.length < datos.length) {
                //agregar celdas y renglones en blanco
                for (let i = tabla.rows.length; i < datos.length; i++) {
                    let row = tabla.insertRow();
                    row.insertCell();
                    row.insertCell();
                }
            }
            //si tengo de mas lo ocutlo
            for (let i = datos.length; i < tabla.rows.length; i++) {
                tabla.rows[i].style.display = "none";
            }

            for (let i = 0; i < datos.length; i++) {
                tabla.rows[i].cells[0].textContent = datos[i].NumControl;
                tabla.rows[i].cells[1].textContent = datos[i].Nombre;
                tabla.rows[i].style.display = null;
            }
        }


        mostrarDatos(lista);

        const search = document.getElementById("txtSearch");

        document.getElementById("btnFiltrar").addEventListener("click", ()=>{
            //valido que tenga contenido el search
            //lista.where(x=> x.Contains(search.value))
            //where = filter
            //firstOrDefault = find
            //lastOrDefault = last
            //Any = some

            let filtrado = lista.filter(x => x.Nombre.includes(search.value) || x.NumControl.includes(search.value))
            mostrarDatos(filtrado);

        });

    </script>
</body>
</html>