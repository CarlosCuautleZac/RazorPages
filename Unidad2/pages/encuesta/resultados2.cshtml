@page "/encuesta/resultados"
@model Unidad2.pages.encuesta.resultados2Model
@{
    Layout = "_Layout";
}

<html>
<head>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
</head>
<body>
    <main>
        <h1>Resultados de la encuesta de satisfacción</h1>
        <section class="resultados">
            <div id="chart"></div>
            <div>
                <h2>Total de encuestas:</h2>
                <p id="total">0</p>
                <h2>Puntuación del cliente:</h2>
                <p id="puntuacion">0</p>
            </div>
        </section>
    </main>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/6.0.1/signalr.js"></script>
    <script>

        const baseUrl = "https://integracion.itesrc.net/api/encuesta/resultados";

        async function descargarResultados() {

            var opts = {
                headers: {
                    'mode': 'cors'
                }
            }
            let response = await fetch(baseUrl, opts);
            if (response.ok) {
                let resultados = await response.json();
                //console.log(resultados);
                document.getElementById("total").textContent = resultados.totalEncuestas;
                document.getElementById("puntuacion").textContent = resultados.puntuacion.toFixed(2);

                let criterios = ["Criterios", ...resultados.criterios.map(x => x.criterio)];
                let excelente = ["Excelente", ...resultados.criterios.map(x => x.excelente)];
                let bueno = ["Bueno", ...resultados.criterios.map(x => x.bueno)];
                let regular = ["Regular", ...resultados.criterios.map(x => x.regular)];
                let malo = ["Malo", ...resultados.criterios.map(x => x.malo)];
                let muy_malo = ["Muy malo", ...resultados.criterios.map(x => x.muyMalo)];

                let datos = [criterios, excelente, bueno, regular, malo, muy_malo];
                //console.log(excelente);
                //console.log(resultados);
                //console.log(datos);
                drawChart(datos);
            }
        };


        google.charts.load('current', { 'packages': ['bar'], 'language': 'es' });
        google.charts.setOnLoadCallback(descargarResultados);

        function drawChart(datos) {
            var data = google.visualization.arrayToDataTable(datos);

            var options = {
                chart: {
                    title: 'Rendimiento de la encuesta',
                    subtitle: 'Agrupada por criterios',
                },
                bars: 'horizontal'
            };

            var chart = new google.charts.Bar(document.getElementById('chart'));

            chart.draw(data, google.charts.Bar.convertOptions(options));

            const connection = new signalR.HubConnectionBuilder()
                .withUrl("https://integracion.itesrc.net/encuestaHub")
                .configureLogging(signalR.LogLevel.Information)
                .build();

            async function start() {
                try {
                    await connection.start();
                    console.log("SignalR Connected.");
                } catch (err) {
                    console.log(err);
                    setTimeout(start, 5000);
                }
            };

            connection.onclose(async () => {
                await start();
            });


            connection.on("encuestaRealizada", () => {
                console.log("encuesta realizada");
                descargarResultados();
            });


            // Start the connection.
            start();
        };




    </script>
</body>
</html>

